{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","styles","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesFiler","useState","onChange","event","onChangeFilter","target","value","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","map","data","totalMaximum","max","item","ExpensesChart","chartDataPoints","expenses","expsense","getMonth","ExpensesList","items","length","exp","id","Expenses","filterYear","onChangeExpenseFilter","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","required","min","step","onClick","document","getElementById","display","NewExpense","newExpenseData","random","toString","onAddNewExpense","DUMMY_EXPENSES","App","setExpenses","filteredExpenses","setFilteredExpenses","isAdded","setIsAdded","expense","prevExpenses","filteredYear","filter","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.90b555c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const styles = 'card ' + props.className;\r\n    return <div className={styles}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport \"./ExpenseDate.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const date = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <Card className=\"expense-date\">\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__date\">{date}</div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">$ {props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFiler = (props) => {\r\n  const [filterYear, setFilterYear] = useState(\"\");\r\n\r\n  const filterChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={filterChangeHandler}>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFiler;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map(data => data.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((item) => {\r\n        return <ChartBar\r\n          key={item.label}\r\n          value={item.value}\r\n          maxValue={totalMaximum}\r\n          label={item.label}\r\n        />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  let chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dev\", value: 0 }\r\n  ];\r\n  for (const expsense of props.expenses) {\r\n    //console.log(props.expenses);\r\n    const expenseMonth = expsense.date.getMonth(); // get month start with 0\r\n    chartDataPoints[expenseMonth].value += expsense.amount;\r\n    //console.log(chartDataPoints);\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n //console.log(props.items)\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No records found!</h2>;\r\n  }\r\n  return (\r\n    <div className=\"expenses-list\">\r\n      {props.items.map((exp) => \r\n        <ExpenseItem\r\n          key={exp.id}\r\n          title={exp.title}\r\n          amount={exp.amount}\r\n          date={exp.date}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFiler from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nconst Expenses = (props) => {\r\n  const onChangeYearFilter = (filterYear) => {\r\n    props.onChangeExpenseFilter(filterYear);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <h2>Let's get started!</h2>\r\n        <ExpensesFiler onChangeFilter={onChangeYearFilter} />\r\n        <ExpensesChart expenses={props.data} />\r\n        <ExpensesList items={props.data} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault(); // To stop page to reload\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  const newExpenseShowHandler = () => {\r\n    document.getElementById(\"newExpenseForm\").style.display = \"block\";\r\n    document.getElementById(\"addNewExpBtn\").style.display = \"none\";\r\n  };\r\n\r\n  const newExpenseHideHandler = () => {\r\n    document.getElementById(\"newExpenseForm\").style.display = \"none\";\r\n    document.getElementById(\"addNewExpBtn\").style.display = \"block\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={submitFormHandler}\r\n        id=\"newExpenseForm\"\r\n        className=\"new-expense__hidenewexpense\"\r\n      >\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={newExpenseHideHandler}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n      <div className=\"new-expense__newexpensebutton\" id=\"addNewExpBtn\">\r\n        <button type=\"button\" onClick={newExpenseShowHandler}>\r\n          Add New Expense\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n  const saveExpenseDataHandler = (expenseData) => {\r\n    const newExpenseData = {\r\n      ...expenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    //console.log(newExpenseData);\r\n    props.onAddNewExpense(newExpenseData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Groceries\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"Work Desk\",\n    amount: 120,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const [filteredExpenses, setFilteredExpenses] = useState(expenses);\n  const [isAdded, setIsAdded] = useState(true);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    setIsAdded(true);\n  };\n\n  const filterChangeHandler = (filteredYear) => {\n    setFilteredExpenses(\n      expenses.filter((item) => {\n        return item.date.getFullYear() == filteredYear;\n      })\n    );\n    setIsAdded(false);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddNewExpense={addExpenseHandler} />\n      <Expenses \n        data={isAdded ? expenses : filteredExpenses} \n        onChangeExpenseFilter={filterChangeHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}